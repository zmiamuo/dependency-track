version: '3.7'

volumes:
  dependency-track-data:
  dependency-track-db:

services:
  dtrack-apiserver:
    image: dependencytrack/apiserver
    depends_on:
      - dtrack-db
      - dtrack-proxy
#      - dtrack-oidc
    environment:
      - LOGGING_LEVEL=DEBUG
      # The Dependency-Track container can be configured using any of the
      # available configuration properties defined in:
      # https://docs.dependencytrack.org/getting-started/configuration/
      # All properties are upper case with periods replaced by underscores.
      #
      # Database Properties
      - ALPINE_DATABASE_MODE=external
      - ALPINE_DATABASE_URL=jdbc:postgresql://dtrack-db:5432/dtrack
      - ALPINE_DATABASE_DRIVER=org.postgresql.Driver
      - ALPINE_DATABASE_USERNAME=${DB_USERNAME}
      - ALPINE_DATABASE_PASSWORD=${DB_PASSWORD}
      - ALPINE_DATABASE_POOL_ENABLED=true
      - ALPINE_DATABASE_POOL_MAX_SIZE=20
      - ALPINE_DATABASE_POOL_MIN_IDLE=10
      - ALPINE_DATABASE_POOL_IDLE_TIMEOUT=300000
      - ALPINE_DATABASE_POOL_MAX_LIFETIME=600000
      #
      # Optional OpenID Connect (OIDC) Properties
      - ALPINE_OIDC_ENABLED=true
      - ALPINE_OIDC_ISSUER=${EXTERNAL_URL}/oidc
      - ALPINE_OIDC_CLIENT_ID=dt
      - ALPINE_OIDC_USERNAME_CLAIM=nickname
      - ALPINE_OIDC_TEAMS_CLAIM=groups
      - ALPINE_OIDC_USER_PROVISIONING=true
      - ALPINE_OIDC_TEAM_SYNCHRONIZATION=true
      #
      # Optional HTTP Proxy Settings
#      - ALPINE_HTTP_PROXY_ADDRESS=fpc.itn.intraorange
#      - ALPINE_HTTP_PROXY_PORT=8080
      - ALPINE_NO_PROXY=localhost,127.0.0.1,dtrack-proxy,${EXTERNAL_ADDR}
      #
      # Optional Cross-Origin Resource Sharing (CORS) Headers
#      - ALPINE_CORS_ENABLED=false
#      - ALPINE_CORS_ALLOW_ORIGIN=*
#      - ALPINE_CORS_ALLOW_METHODS=GET, POST, PUT, DELETE, OPTIONS
#      - ALPINE_CORS_ALLOW_HEADERS=Origin, Content-Type, Authorization, X-Requested                                                                                                                                                             -With, Content-Length, Accept, Origin, X-Api-Key, X-Total-Count, *
#      - ALPINE_CORS_EXPOSE_HEADERS=Origin, Content-Type, Authorization, X-Requeste                                                                                                                                                             d-With, Content-Length, Accept, Origin, X-Api-Key, X-Total-Count
#      - ALPINE_CORS_ALLOW_CREDENTIALS=true
#      - ALPINE_CORS_MAX_AGE=3600
      #
      # Optional metrics properties
      - ALPINE_METRICS_ENABLED=true
      - ALPINE_METRICS_AUTH_USERNAME=dt
      - ALPINE_METRICS_AUTH_PASSWORD=${PROMETHEUS_PASSWORD}
    deploy:
      resources:
        limits:
          memory: 12288m
        reservations:
          memory: 8192m
      restart_policy:
        condition: on-failure
    volumes:
      - 'dependency-track-data:/data'
      - "./cacerts:/opt/java/openjdk/lib/security/cacerts:ro"
    restart: unless-stopped
    extra_hosts:
      host.docker.internal: host-gateway

  dtrack-frontend:
    image: dependencytrack/frontend
    depends_on:
      - dtrack-apiserver
    environment:
      # The base URL of the API server.
      #   * This URL must be reachable by the browsers of your users.
      #   * The frontend container itself does NOT communicate with the API serv                                                                                                                                                             er directly, it just serves static files.
      #   * When deploying to dedicated servers, please use the external IP or d                                                                                                                                                             omain of the API server.
      - API_BASE_URL=${EXTERNAL_URL}
      - OIDC_ISSUER=${EXTERNAL_URL}/oidc
      - OIDC_CLIENT_ID=dt
      - OIDC_SCOPE=openid
      - 'OIDC_LOGIN_BUTTON_TEXT=SSO Login'
      # volumes:
      # - "/host/path/to/config.json:/app/static/config.json"
    volumes:
      - ./nginx.front.dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./localhost.crt:/tmp/localhost.crt:ro
      - ./localhost.key:/tmp/localhost.key:ro
    ports:
      - "8085:8080"
      - "443:8443"
    restart: unless-stopped

  dtrack-provisioning:
    image: eclipse-temurin:17.0.9_9-jre-alpine
    depends_on:
      - dtrack-apiserver
    environment:
      - SERVER_FORWARD-HEADERS-STRATEGY=framework
      - EXTERNAL_URL=${EXTERNAL_URL}/provisioning
      - API_BASE_URL=${EXTERNAL_URL}
      - API_KEY=${PROVISIONING_TOKEN}
      - DIOD_OIDC_ID=${DIOD_OIDC_ID}
      - DIOD_OIDC_SECRET=${DIOD_OIDC_SECRET}
      - DFY_OIDC_ID=${DFY_OIDC_ID}
      - DFY_OIDC_SECRET=${DFY_OIDC_SECRET}
    command: ["java", "-jar", "/opt/app/japp.jar"]
    volumes:
      - ./provisioning.jar:/opt/app/japp.jar:ro
      - "./cacerts:/opt/java/openjdk/lib/security/cacerts:ro"
    restart: unless-stopped
    extra_hosts:
      host.docker.internal: host-gateway

  dtrack-oidc:
    image: eclipse-temurin:17.0.9_9-jre-alpine
    environment:
      - SERVER_FORWARD-HEADERS-STRATEGY=framework
      - EXTERNAL_URL=${EXTERNAL_URL}/oidc
      - API_BASE_URL=${EXTERNAL_URL}
      - DIOD_OIDC_ID=${DIOD_OIDC_ID}
      - DIOD_OIDC_SECRET=${DIOD_OIDC_SECRET}
      - DFY_OIDC_ID=${DFY_OIDC_ID}
      - DFY_OIDC_SECRET=${DFY_OIDC_SECRET}
    command: ["java", "-jar", "/opt/app/japp.jar"]
    volumes:
      - ./oidc.jar:/opt/app/japp.jar:ro
      - "./cacerts:/opt/java/openjdk/lib/security/cacerts:ro"
    restart: unless-stopped

  dtrack-db:
    image: postgres
    environment:
      - POSTGRES_DB=dtrack
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - 'dependency-track-db:/var/lib/postgresql/data'
    restart: unless-stopped

  dtrack-proxy:
    image: nginxinc/nginx-unprivileged:1.25.2-alpine
    volumes:
      - ./nginx.front.dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./localhost.crt:/tmp/localhost.crt:ro
      - ./localhost.key:/tmp/localhost.key:ro
    restart: unless-stopped

  dtrack-swagger:
    image: swaggerapi/swagger-ui
    environment:
      - BASE_URL=/swagger
      - SWAGGER_JSON_URL=${EXTERNAL_URL}/api/swagger.json
    restart: unless-stopped
